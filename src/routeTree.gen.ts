/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PodsAllImport } from './routes/pods/all'
import { Route as PodsPodIdImport } from './routes/pods/$podId'

// Create Virtual Routes

const CreateLazyImport = createFileRoute('/create')()
const IndexLazyImport = createFileRoute('/')()
const SettingsIndexLazyImport = createFileRoute('/settings/')()
const CreateListingLazyImport = createFileRoute('/create/listing')()

// Create/Update Routes

const CreateLazyRoute = CreateLazyImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/create.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const SettingsIndexLazyRoute = SettingsIndexLazyImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/settings/index.lazy').then((d) => d.Route),
)

const CreateListingLazyRoute = CreateListingLazyImport.update({
  id: '/listing',
  path: '/listing',
  getParentRoute: () => CreateLazyRoute,
} as any).lazy(() =>
  import('./routes/create/listing.lazy').then((d) => d.Route),
)

const PodsAllRoute = PodsAllImport.update({
  id: '/pods/all',
  path: '/pods/all',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/pods/all.lazy').then((d) => d.Route))

const PodsPodIdRoute = PodsPodIdImport.update({
  id: '/pods/$podId',
  path: '/pods/$podId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/pods/$podId.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/create': {
      id: '/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof CreateLazyImport
      parentRoute: typeof rootRoute
    }
    '/pods/$podId': {
      id: '/pods/$podId'
      path: '/pods/$podId'
      fullPath: '/pods/$podId'
      preLoaderRoute: typeof PodsPodIdImport
      parentRoute: typeof rootRoute
    }
    '/pods/all': {
      id: '/pods/all'
      path: '/pods/all'
      fullPath: '/pods/all'
      preLoaderRoute: typeof PodsAllImport
      parentRoute: typeof rootRoute
    }
    '/create/listing': {
      id: '/create/listing'
      path: '/listing'
      fullPath: '/create/listing'
      preLoaderRoute: typeof CreateListingLazyImport
      parentRoute: typeof CreateLazyImport
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface CreateLazyRouteChildren {
  CreateListingLazyRoute: typeof CreateListingLazyRoute
}

const CreateLazyRouteChildren: CreateLazyRouteChildren = {
  CreateListingLazyRoute: CreateListingLazyRoute,
}

const CreateLazyRouteWithChildren = CreateLazyRoute._addFileChildren(
  CreateLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/create': typeof CreateLazyRouteWithChildren
  '/pods/$podId': typeof PodsPodIdRoute
  '/pods/all': typeof PodsAllRoute
  '/create/listing': typeof CreateListingLazyRoute
  '/settings': typeof SettingsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/create': typeof CreateLazyRouteWithChildren
  '/pods/$podId': typeof PodsPodIdRoute
  '/pods/all': typeof PodsAllRoute
  '/create/listing': typeof CreateListingLazyRoute
  '/settings': typeof SettingsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/create': typeof CreateLazyRouteWithChildren
  '/pods/$podId': typeof PodsPodIdRoute
  '/pods/all': typeof PodsAllRoute
  '/create/listing': typeof CreateListingLazyRoute
  '/settings/': typeof SettingsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create'
    | '/pods/$podId'
    | '/pods/all'
    | '/create/listing'
    | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create'
    | '/pods/$podId'
    | '/pods/all'
    | '/create/listing'
    | '/settings'
  id:
    | '__root__'
    | '/'
    | '/create'
    | '/pods/$podId'
    | '/pods/all'
    | '/create/listing'
    | '/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CreateLazyRoute: typeof CreateLazyRouteWithChildren
  PodsPodIdRoute: typeof PodsPodIdRoute
  PodsAllRoute: typeof PodsAllRoute
  SettingsIndexLazyRoute: typeof SettingsIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CreateLazyRoute: CreateLazyRouteWithChildren,
  PodsPodIdRoute: PodsPodIdRoute,
  PodsAllRoute: PodsAllRoute,
  SettingsIndexLazyRoute: SettingsIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/create",
        "/pods/$podId",
        "/pods/all",
        "/settings/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/create": {
      "filePath": "create.lazy.tsx",
      "children": [
        "/create/listing"
      ]
    },
    "/pods/$podId": {
      "filePath": "pods/$podId.tsx"
    },
    "/pods/all": {
      "filePath": "pods/all.tsx"
    },
    "/create/listing": {
      "filePath": "create/listing.lazy.tsx",
      "parent": "/create"
    },
    "/settings/": {
      "filePath": "settings/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
