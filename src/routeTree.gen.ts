/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestImport } from './routes/test'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedPodsAllImport } from './routes/_authenticated/pods/all'
import { Route as AuthenticatedPodsPodIdImport } from './routes/_authenticated/pods/$podId'

// Create Virtual Routes

const AuthenticatedIndexLazyImport = createFileRoute('/_authenticated/')()
const AuthenticatedCreateLazyImport = createFileRoute(
  '/_authenticated/create',
)()
const AuthenticatedSettingsIndexLazyImport = createFileRoute(
  '/_authenticated/settings/',
)()
const AuthenticatedCreatePodLazyImport = createFileRoute(
  '/_authenticated/create/pod',
)()
const AuthenticatedCreateListingLazyImport = createFileRoute(
  '/_authenticated/create/listing',
)()

// Create/Update Routes

const TestRoute = TestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/_authenticated.lazy').then((d) => d.Route),
)

const AuthenticatedIndexLazyRoute = AuthenticatedIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/index.lazy').then((d) => d.Route),
)

const AuthenticatedCreateLazyRoute = AuthenticatedCreateLazyImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/create.lazy').then((d) => d.Route),
)

const AuthenticatedSettingsIndexLazyRoute =
  AuthenticatedSettingsIndexLazyImport.update({
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/index.lazy').then((d) => d.Route),
  )

const AuthenticatedCreatePodLazyRoute = AuthenticatedCreatePodLazyImport.update(
  {
    id: '/pod',
    path: '/pod',
    getParentRoute: () => AuthenticatedCreateLazyRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/create/pod.lazy').then((d) => d.Route),
)

const AuthenticatedCreateListingLazyRoute =
  AuthenticatedCreateListingLazyImport.update({
    id: '/listing',
    path: '/listing',
    getParentRoute: () => AuthenticatedCreateLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/create/listing.lazy').then((d) => d.Route),
  )

const AuthenticatedPodsAllRoute = AuthenticatedPodsAllImport.update({
  id: '/pods/all',
  path: '/pods/all',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/pods/all.lazy').then((d) => d.Route),
)

const AuthenticatedPodsPodIdRoute = AuthenticatedPodsPodIdImport.update({
  id: '/pods/$podId',
  path: '/pods/$podId',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/pods/$podId.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/create': {
      id: '/_authenticated/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof AuthenticatedCreateLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pods/$podId': {
      id: '/_authenticated/pods/$podId'
      path: '/pods/$podId'
      fullPath: '/pods/$podId'
      preLoaderRoute: typeof AuthenticatedPodsPodIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pods/all': {
      id: '/_authenticated/pods/all'
      path: '/pods/all'
      fullPath: '/pods/all'
      preLoaderRoute: typeof AuthenticatedPodsAllImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/create/listing': {
      id: '/_authenticated/create/listing'
      path: '/listing'
      fullPath: '/create/listing'
      preLoaderRoute: typeof AuthenticatedCreateListingLazyImport
      parentRoute: typeof AuthenticatedCreateLazyImport
    }
    '/_authenticated/create/pod': {
      id: '/_authenticated/create/pod'
      path: '/pod'
      fullPath: '/create/pod'
      preLoaderRoute: typeof AuthenticatedCreatePodLazyImport
      parentRoute: typeof AuthenticatedCreateLazyImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedCreateLazyRouteChildren {
  AuthenticatedCreateListingLazyRoute: typeof AuthenticatedCreateListingLazyRoute
  AuthenticatedCreatePodLazyRoute: typeof AuthenticatedCreatePodLazyRoute
}

const AuthenticatedCreateLazyRouteChildren: AuthenticatedCreateLazyRouteChildren =
  {
    AuthenticatedCreateListingLazyRoute: AuthenticatedCreateListingLazyRoute,
    AuthenticatedCreatePodLazyRoute: AuthenticatedCreatePodLazyRoute,
  }

const AuthenticatedCreateLazyRouteWithChildren =
  AuthenticatedCreateLazyRoute._addFileChildren(
    AuthenticatedCreateLazyRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedCreateLazyRoute: typeof AuthenticatedCreateLazyRouteWithChildren
  AuthenticatedIndexLazyRoute: typeof AuthenticatedIndexLazyRoute
  AuthenticatedPodsPodIdRoute: typeof AuthenticatedPodsPodIdRoute
  AuthenticatedPodsAllRoute: typeof AuthenticatedPodsAllRoute
  AuthenticatedSettingsIndexLazyRoute: typeof AuthenticatedSettingsIndexLazyRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedCreateLazyRoute: AuthenticatedCreateLazyRouteWithChildren,
  AuthenticatedIndexLazyRoute: AuthenticatedIndexLazyRoute,
  AuthenticatedPodsPodIdRoute: AuthenticatedPodsPodIdRoute,
  AuthenticatedPodsAllRoute: AuthenticatedPodsAllRoute,
  AuthenticatedSettingsIndexLazyRoute: AuthenticatedSettingsIndexLazyRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/test': typeof TestRoute
  '/create': typeof AuthenticatedCreateLazyRouteWithChildren
  '/': typeof AuthenticatedIndexLazyRoute
  '/pods/$podId': typeof AuthenticatedPodsPodIdRoute
  '/pods/all': typeof AuthenticatedPodsAllRoute
  '/create/listing': typeof AuthenticatedCreateListingLazyRoute
  '/create/pod': typeof AuthenticatedCreatePodLazyRoute
  '/settings': typeof AuthenticatedSettingsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/test': typeof TestRoute
  '/create': typeof AuthenticatedCreateLazyRouteWithChildren
  '/': typeof AuthenticatedIndexLazyRoute
  '/pods/$podId': typeof AuthenticatedPodsPodIdRoute
  '/pods/all': typeof AuthenticatedPodsAllRoute
  '/create/listing': typeof AuthenticatedCreateListingLazyRoute
  '/create/pod': typeof AuthenticatedCreatePodLazyRoute
  '/settings': typeof AuthenticatedSettingsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/test': typeof TestRoute
  '/_authenticated/create': typeof AuthenticatedCreateLazyRouteWithChildren
  '/_authenticated/': typeof AuthenticatedIndexLazyRoute
  '/_authenticated/pods/$podId': typeof AuthenticatedPodsPodIdRoute
  '/_authenticated/pods/all': typeof AuthenticatedPodsAllRoute
  '/_authenticated/create/listing': typeof AuthenticatedCreateListingLazyRoute
  '/_authenticated/create/pod': typeof AuthenticatedCreatePodLazyRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/test'
    | '/create'
    | '/'
    | '/pods/$podId'
    | '/pods/all'
    | '/create/listing'
    | '/create/pod'
    | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/test'
    | '/create'
    | '/'
    | '/pods/$podId'
    | '/pods/all'
    | '/create/listing'
    | '/create/pod'
    | '/settings'
  id:
    | '__root__'
    | '/_authenticated'
    | '/login'
    | '/test'
    | '/_authenticated/create'
    | '/_authenticated/'
    | '/_authenticated/pods/$podId'
    | '/_authenticated/pods/all'
    | '/_authenticated/create/listing'
    | '/_authenticated/create/pod'
    | '/_authenticated/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
  TestRoute: typeof TestRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
  TestRoute: TestRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/login",
        "/test"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/create",
        "/_authenticated/",
        "/_authenticated/pods/$podId",
        "/_authenticated/pods/all",
        "/_authenticated/settings/"
      ]
    },
    "/login": {
      "filePath": "login.ts"
    },
    "/test": {
      "filePath": "test.tsx"
    },
    "/_authenticated/create": {
      "filePath": "_authenticated/create.lazy.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/create/listing",
        "/_authenticated/create/pod"
      ]
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pods/$podId": {
      "filePath": "_authenticated/pods/$podId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pods/all": {
      "filePath": "_authenticated/pods/all.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/create/listing": {
      "filePath": "_authenticated/create/listing.lazy.tsx",
      "parent": "/_authenticated/create"
    },
    "/_authenticated/create/pod": {
      "filePath": "_authenticated/create/pod.lazy.tsx",
      "parent": "/_authenticated/create"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
